#! /usr/bin/env python3.4

string = "The value of Pi is 3 . 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5 0 2 8 8 4 1 9 7 1 6 9 3 9 9 3 7 5 1 0 5 8 2 0 9 7 4 9 4 4 5 9 2 3 0 7 8 1 6 4 0 6 2 8 6 2 0 8 9 9 8 6 2 8 0 3 4 8 2 5 3 4 2 1 1 7 0 6 7 9 8 2 1 4 8 0 8 6 5 1 3 2 8 2 3 0 6 6 4 7 0 9 3 8 4 4 6 0 9 5 5 0 5 8 2 2 3 1 7 2 5 3 5 9 4 0 8 1 2 8 4 8 1"

strList = ["736925233695599303035509581762617623184956190649483967300203776387436934399982", "943020914707361894793269276244518656023955905370512897816345542332011497599489", "627842432748378803270141867695262118097500640514975588965029300486760520801049", "153788541390942453169171998762894127722112946456829486028149318156024967788794", "981377721622935943781100444806079767242927624951078415344642915084276452000204", "276947069804177583220909702029165734725158290463091035903784297757265172087724", "474095226716630600546971638794317119687348468873818665675127929857501636341131"] 

def addNumbers ():
    sum1 = 0
    for i in range(1001):
        sum1 = sum1 + i
	#print i
    return sum1

def addMultiplesOf (num):
    times = 1000 / num + 1
    sum2 = 0
    for i in range(times):
	sum2 = sum2 + i * num
    return sum2

def getNumberFrequency (target):
    size = len(string)
    freq = 0
    target = str(target)
    for i in range (size):
        if target == string[i]:
            freq = freq + 1	
    return freq

def getDigitalSum (tar):
    size = len(tar)
    sum3 = 0
    for i in range (size):
	sum3 = sum3 + int(tar[i])
    return sum3

def getSequenceWithoutDigit (dig):
    sizelist = len(strList)
    whole = ""
    dig = str(dig)
    cnt = 0
    maxcnt = 0
    longest = ""
    temp = ""

    for i in range (sizelist):
	whole = whole + strList[i]
    #print whole

    sizestr = len(whole)
    for i in range (sizestr):
	if dig == whole[i]:
	    cnt = 0
	    temp = ""
	else:
	    cnt = cnt + 1
	    temp = temp + whole[i]
	    if maxcnt < cnt:
		maxcnt = cnt
		longest = temp
    return longest

def capitalizeMe (strin):
    out = []
    temp = strin.split()
    for i in range (len(temp)):
	tt = temp[i]
	size = len(tt) - 1
	start = 0
	end = size
	k = 0
	while not tt[k].isalpha():
	    k = k + 1
	    start = k
	k = size
	while not tt[k].isalpha():
	    k = k - 1
	    end = k
	#print start
	#print end
	#print tt[start:end+1]

	ind = set([start,end])
	tt = ("".join(c.upper() if j in ind else c for j, c in enumerate(tt)))
	#print tt
	out = out + [tt]
    out = " ".join(out)
    return out


if __name__=="__main__":
    s = addNumbers()
    #print s
    num = 3
    s = addMultiplesOf (num)
    #print s
    dig = 5
    freq = getNumberFrequency(dig)
    #print freq
    string2 = "1111"
    s = getDigitalSum (string2)
    #print s
    longstr = getSequenceWithoutDigit(dig)
    #print longstr
    string3 = "lorem ipsum dolor a, sit amet, vocent civibus has eu"
    print string3
    output = capitalizeMe (string3)
    print output



